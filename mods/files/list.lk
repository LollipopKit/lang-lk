class List {
    'items': {}
}

fn List:add(item) {
    self.items[#self.items] = item
    rt self
}

fn List:remove(item) {
    for i in self.items {
        if self.items[i] == item {
            self.items[i] = nil
        }
    }
    rt self
}

fn List:contains(item) {
    for i in self.items {
        if self.items[i] == item {
            rt true
        }
    }
    rt false
}

fn List:insert(item, idx) {
    for i = idx, #self.items {
        self.items[i + 1] = self.items[i]
    }
    self.items[idx] = item
    rt self
}

fn List:remove_at(idx) {
    for i = idx, #self.items {
        self.items[i] = self.items[i + 1]
    }
    rt self
}

fn List:clear() {
    self.items = {}
    rt self
}

fn List:reverse() {
    maxIdx := #self.items - 1
    if maxIdx > 0 {
        i := 0
        while i < maxIdx {
            tmp = self.items[i]
            self.items[i] = self.items[maxIdx - i]
            self.items[maxIdx - i] = tmp
            i++
        }
    }
    rt self
}

fn List:__str() {
    rt str(self.items)
}

rt List
